#This is the Components Monitor Configure File

####
# Some Basic Variables
####
CLUSTER = jns
# times for check alive retry
RETRY = 2

# interval between every monitor
RETRY_INTERVAL = 5 

# timeout set the check a script
TIMEOUT = 2

# inlarge factor if network error
INLARGE_FACTOR = 20

MONITOR_INTERVAL = 30

SERVER_IP = 192.168.1.178
WORKER_IP = 192.168.1.178
DB_IP = 192.168.1.178
DB_USER = 
DB_PWD = 

# port of the service
SERVER_PORT = 8002
#if the node is a worker
WORKER_PORT = 8003
DB_PORT = 27017
DB_NAME = comp_monitor_data

LOG_PATH = /tmp


####
# The Components to monitor
# 
# script:the excute script
# type:service , cmdline , nohup
# daemon:for 'service' type,you can use 'service start/restart/stop'
# output: The output created by script

# description: description for the service
####

#a sub system named DB
[DB]
manager_addr = 192.168.1.178
description = DB
[[mongod]]
script = /usr/local/mongodb/bin/mongod -f /usr/local/mongodb/mongodb.conf
type = cmdline
is_root = 1
output = /var/log/mongodb/mongodb.log
[[mysqld]]
script = mysqld
type = service
is_root = 1
output = 

[COMPONENTS-MONITOR]
manager_addr = 192.168.1.178
description = monitor the components in the cloud
[[cmserverd]]
script = /usr/local/monitor/comp_monitor/cmserverd start
type = cmdline
output=/tmp/cmServer.log
[[cmworkerd]]
script = /usr/local/monitor/comp_monitor/cmworkerd start
type = cmdline
output=/tmp/cmWorker.log
[[cmagentd]]
script = /usr/local/monitor/comp_monitor/cmagentd start
type = cmdline
output =/tmp/cmAgent.log

[RESOURCE-MONITOR]
manager_addr = 192.168.1.178
description = monitor the resource of the cloud
[[monserverd]]
script = /usr/local/monitor/res_monitor/monserver/monserverd start
type = cmdline
output = /tmp/monserver.log
[[monworkerd]]
script = /usr/local/monitor/res_monitor/monworker/monworkerd start
type = cmdline
output = /tmp/monworker.log
[[monagentd]]
script = /usr/local/monitor/res_monitor/monagent/monagentd start
type = cmdline
output = /tmp/monagent.log

#[Services]

#[[one]]
#script = one
#type = service
#deamon = oned
#output = /tmp/one
#description = IaaS service

#[[heartbeat]]
#script = python /usr/crane/package/supportService/serviceMonitor/heartbeat.py
#type = nohup
#is_root = 1

#[[monitor]]
#script = /usr/crane/package/monitor/bin/monitors
#type = service
#deamon = monitors all
#is_root = 1

#[[monitor]]
#script = /usr/crane/monitor/monworker/monworkerd
#type = service
#deamon = monworkerd

#[[mongodb]]
#script = mongod -f /etc/mongodb.conf
#type = cmdline
#is_root = 1
#description = MongoDB Server

#[[thrift]]
#script = /usr/crane/package/thriftCrane/TCrane
#type = service
#deamon = TCrane
#is_root = 1

#[[ip]]
#script = python /usr/crane/package/cloud/iaas/hook/HookServer.py 
#type = nohup 

#[[iaas]]
#script = python /usr/crane/package/lib/craneProcess/IaaSAgent.py
#script = python /usr/crane/package/cloud/iaas/IaaSAgent.py 
#type = service
#deamon = IaaSAgent

#[[hpc]]
#script = python /usr/crane/package/upperService/hpcpaas/HPCAgent.py 
#script = python /usr/crane/package/lib/craneProcess/HPCAgent.py
#type = service
#deamon = HPCAgent

#[[webpaas]]
#script = python /usr/crane/package/upperService/webpaas/WebPaaSAgent.py 
#script = python /usr/crane/package/lib/craneProcess/WebPaaSAgent.py
#type = service
#deamon = WebPaaSAgent

#[[vmactionmq]]
#script = /usr/crane/package/cloud/iaas/vm_actions/VmActQueue -t 5 -p 2650 -l 2 -f /usr/crane/package/conf/VmActQueue.conf 
#type = cmdline

#[[nat]]
#script = python /usr/crane/package/cloud/iaas/nat_server/NatServer.py 
#type = cmdline
#is_root = 1
#port = 22

#script = python /home/nat_server/NatServer.py
#type = cmdline
#is_root = 1
#port = 22
#remote_host = 202.114.10.169

#[[port]]
#script = /usr/crane/package/cloud/iaas/net_attach/VmNetAttach -f /usr/crane/package/conf/VmNetAttach.conf 
#type = cmdline

#[[userReport]]
#script = python /usr/crane/package/supportService/userReport/ReportService.py
#type = nohup

#[[installation]]
#script = python /usr/crane/package/install/installation.py
#type=nohup
	
#[[hbclient]]
#script = python /usr/crane/package/supportService/serviceMonitor/monitor.py
#type = nohup

#[[linkserver]]
#script = python /usr/Crane/package/monitor/monserver/linkserver.py
#type = nohup
#is_root = 1
#port = 22
#remote_host = 202.114.10.168
#output = /usr/crane/linkserverOuts

#[[linkclient]]
#script = python /usr/crane/package/monitor/monserver/linkclient.py
#type = nohup
#is_root = 1
#output = /usr/crane/linkclientOuts
